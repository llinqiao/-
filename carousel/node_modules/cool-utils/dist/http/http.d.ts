export declare class Http {
    commonConfig: AnyObject;
    set config(_commonConfig: AnyObject);
    notLoginIn(loginPageUrl: string): void;
    checkStatus(response: Response): Response;
    checkErrCode(dataObj: AnyObject): void;
    parseResult(data: any): any;
    processResult(response: Response): Promise<any>;
    csrfToken: null;
    getCsrfToken(): Promise<null | undefined>;
    objectToFormData(obj: AnyObject, form?: FormData, namespace?: string): FormData;
    requestPromises: Map<any, any>;
    requestCache(url: string, customOptions: AnyObject, headers?: {}, config?: {}): any;
    savedFetchRetryTimes: AnyObject;
    request(_url: string, customOptions: AnyObject, headers?: {}, config?: AnyObject): Promise<any>;
    interceptData(_api: string, _data: AnyObject, config: AnyObject): {
        api: string;
        data: any;
    };
    get(getApi: string, getData?: {}, headers?: {}, config?: {}): Promise<any>;
    post(postApi: string, postData?: {}, customeHeaders?: {}, config?: {}): Promise<any>;
    delete(deleteApi: string, postData?: {}, customeHeaders?: {}, config?: {}): Promise<any>;
    put(putApi: string, postData?: {}, customeHeaders?: {}, config?: {}): Promise<any>;
    form(formApi: string, formData: FormData, customeHeaders?: {}, config?: {}): Promise<any>;
}
export declare const http: Http;
