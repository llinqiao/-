export declare type Keys = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '0' | 'f1' | 'f2' | 'f3' | 'f4' | 'f5' | 'f6' | 'f7' | 'f8' | 'f9' | 'f0' | 'f11' | 'f12' | '`' | ',' | '.' | '/' | ';' | '\'' | '[' | ']' | '\\' | '-' | '=' | 'space' | 'escape' | 'arrowup' | 'arrowdown' | 'arrowleft' | 'arrowright' | 'home' | 'end' | 'pageup' | 'pagedown' | 'delete' | 'backspace' | 'tab';
declare type MatchOption = {
    ctrl?: boolean;
    alt?: boolean;
    shift?: boolean;
    meta?: boolean;
    ctrlMeta?: boolean;
};
declare type KeyListener = (evt: KeyboardEvent) => boolean | undefined;
declare class KeyHandler {
    private listeners;
    handler: (evt: KeyboardEvent) => void;
    addEventListener(listener: KeyListener): this;
    removeEventListener(listener: KeyListener): this;
}
export declare const isMatchKey: (key: Keys, evt: KeyboardEvent, option?: MatchOption) => boolean;
export declare const keyboardMan: {
    readonly up: KeyHandler;
    readonly down: KeyHandler;
    readonly press: KeyHandler;
};
export {};
